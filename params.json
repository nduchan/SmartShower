{"name":"SmartShower","tagline":"making your morning easier with an optimized shower schedule while saving you time and water","body":"## Inspiration\r\nSmartShower was inspired by a problem we, as college students, experienced everyday; deciding who gets to use the shower when every morning. Imagine 6 people living in one house...and only a one shower. No one wants to wake up earlier than necessary for a shower only to find that your housemate is already using the shower. In the morning, time is limited and there is nothing worse than cramming in a short shower right before running to class. We created SmartShower to make scheduling hassle-free, ensure people are mindful of the length of their showers, and apply an internet-of-things solution to an everyday problem many experience in shared living spaces.\r\n\r\n## What it does\r\nSmartShower generates an optimal shower schedule based on the Google Calendars of people who live together. Users access the web application to…\r\n* authorize SmartShower to access their Google Calendar (via Google Calendar API)\r\n* configure preferences such as preferred shower time/length\r\n* set a desired shower start time prior to first event of the day\r\n* view a shared calendar for all users\r\n\r\nUsing a raspberry pi microcontroller, we made SmartShower not just a web application but also an internet-of-things device. With the SmartShower device users are…\r\n* informed about current shower status \r\n* given warning indicators regarding amount of time remaining (LED lights, buzzer sounds)\r\n* charged money for every minute past the scheduled end time\r\n\r\nWarning indicators like LED flashes and buzzer sounds for when a user only has 1 minute remaining, for example, use behavioral cues to encourage more efficient water usage. The Capital One Nessie API also allowed for us to integrate monetary incentives into the project. Pressuring users to finish their showers before their scheduled time is a valuable feature which can be proven to be especially useful in areas where water is scarce.\r\n\r\n\r\n\r\n## How it was built\r\nThe backend web application is written using a MySQL database. The website is run with flask framework and various python scripts. The scheduling algorithm is a greedy algorithm that handles collisions by equally reducing times of preferred shower times.  The algorithm is able to handle multiple collisions during one time period and can get an optimal solution every time.\r\n\r\nThe raspberry-pi microcontroller runs on a Linux framework. The SmartShower IoT device leverages a python application which interfaces with multiple LEDs and a sound buzzer.  The raspberry-pi handles the Capital One Nessie API data, sources a timeline from the shared Google Calendar, and does an efficient job of informing the user about the real-time schedules.\r\n\r\n\r\n## Accomplishments that we are proud of\r\nNot only were we able to create SmartShower to solve our core problem but also utilizing an IoT device, monetary incentives, and efficient calendar generation, allowed for the project to do much more than we intended.\r\n\r\n\r\n## What we learned\r\n* using a Flask framework to build a website from scratch \r\n* work with Google Calendar API\r\n* use Capital One Nessie API\r\n* work with MySQL database\r\n* program raspberry-pi to serve as an IoT device\r\n","google":"UA-19563400-6","note":"Don't delete this file! It's used internally to help with page regeneration."}